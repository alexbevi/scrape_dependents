name: Scrape All Dependents
on:
  workflow_dispatch:
    inputs:
      repo_choice:
        description: "Select a repo slug to re-scrape, or 'all' to run all (default: all)"
        required: false
        default: all
        type: choice
        options:
          - all
          - mongoid
          - mongo-ruby-driver
          - node-mongodb-native
          - prisma
          - mongo-java-driver
          - mongo-python-driver
          - mongo-go-driver
          - mongo-csharp-driver
          - drizzle-orm
          - typeorm
          - mongoengine
          - langchaingo
          - langchainjs
          - langchain-mongodb
          - llama_index
          - mongomapper
          - beanie
          - mongodb-odm
          - mongoose
          - spring-data-mongodb
          - txmongo
          - djongo
          - mongo_dart
          - morphia
          - langchain4j
          - mongo-php-library
          - laravel-mongodb
          - mongo-rust-driver
          - mongo-efcore-provider
          - DoctrineMongoDBBundle
          - django-mongodb-backend

  schedule:
    - cron: '0 0 * * 0'  # every Sunday at midnight

permissions:
  contents: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Read repos.json and set matrix
        id: set-matrix
        env:
          REPO_CHOICE: ${{ github.event.inputs.repo_choice }}
        run: |
          import json, os
          choice = (os.getenv('REPO_CHOICE') or 'all').strip()
          with open('./repos.json') as f:
              repos = json.load(f)
          if choice and choice.lower() != 'all':
              repos = [r for r in repos if r.get('repo','').split('/')[-1] == choice]
          with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
              fh.write(f"matrix={json.dumps({'include': repos})}\n")
        shell: python

  scrape:
    needs: generate-matrix
    permissions:
      contents: write
    uses: ./.github/workflows/dependents.yml
    strategy:
      max-parallel: 5
      matrix: ${{fromJson(needs.generate-matrix.outputs.matrix)}}
    with:
      repo: ${{ matrix.repo }}
      language: ${{ matrix.language }}
      type: ${{ matrix.type }}
      package_id: ${{ matrix.package_id }}
      min-stars: 100
      max-pages: 0
      output-dir: output

  finalize-readme:
    needs: scrape
    uses: ./.github/workflows/finalize_readme.yml
    with: {}
